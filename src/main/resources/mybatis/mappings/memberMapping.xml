<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">
    <!-- <resultMap type="board" id="boardResult"> <id property="seq" column="SEQ"></id>
        <result property="title" column="TITLE"/> </resultMap> -->


    <!-- 회원가입 암호화 -->
    <insert id="insertMember">
        insert into member(id, pass, business_no, business_name, ceo, contact, email, business_address,mail_key)
        values (#{id}, #{pass}, #{business_no}, #{business_name}, #{ceo}, #{contact}, #{email}, #{business_address},#{mail_key})
    </insert>
    <!-- 패스워드 체크 -->
    <select id="passChk" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE id = #{id}
          AND pass = #{pass}
    </select>

    <!-- 아이디 중복 체크 -->
    <select id="idChk" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE id = #{id}
    </select>


    <update id="updateMypage">
        update member
        set business_no=#{business_no},
            business_name=#{business_name},
            ceo=#{ceo},
            contact=#{contact},
            email=#{email},
            business_address= #{business_address}
        where id = #{id}
    </update>
    <update id="updatePass">
        UPDATE member
        SET pass = #{pass}
        WHERE id = #{id}
    </update>

    <update id="insertImg">
        update member
        set uploadImgFile=#{updateImgFile}
        where id = #{id}
    </update>

    <!-- 회원가입시 이메일 인증을 위한 랜덤번호 저장 -->
    <update id="updateMailKey" parameterType="member">
        UPDATE member
        SET mail_key = #{mail_key}
        WHERE email = #{email}
          and id = #{id}
    </update>

    <!-- 메일 인증 성공시 기본값 변경을위한 쿼리 -->
    <update id="updateMailAuth" parameterType="member">
        UPDATE member
        SET mail_auth = 1
        WHERE email = #{email}
          and mail_key = #{mail_key}
    </update>

    <!-- 로그인시 메일인증 체크코드 0으로 반환시 인증X -->
    <select id="emailAuthFail" parameterType="String"
            resultType="int">
        SELECT count(*)
        FROM member
        WHERE id = #{id}
          and mail_auth = 1
    </select>

    <!-- 비밀번호 찾기 유효성 검증을 위한정보 가져오기 -->
    <select id="findMemberPW" resultType="member">
        SELECT id, email
        FROM MEMBER
    </select>

    <!-- 생성된 임시비밀번호로 변경하기 -->
    <update id="changeRandomPW" parameterType="member">
        UPDATE member
        SET pass = #{pass}
        WHERE id = #{id}
          and email = #{email}
    </update>

    <!-- 아이디찾기위한 데이터베이스 정보 검색 -->
    <select id="findMemberID" resultType="member">
        SELECT id
        FROM member
        WHERE business_no = #{business_no}
          AND ceo = #{ceo}
    </select>

    <!-- uuid 업데이트 -->
    <update id="updateUuid">
        update member
        set uuid=#{uuid}
        where id = #{id}
    </update>

    <select id="getProfileImg" resultType="img">
        select i.*
        from img i
                 inner join member m on i.uuid = m.uuid
        where m.id = #{id}
    </select>

    <!-- 발주내역에서 id검색하면 id정보 조회 -->
    <select id="getMemberid" resultType="member"
            parameterType="member">
        select id, business_no, business_name, ceo
        from member
        where id = #{id}
    </select>

    <select id="getMember" resultType="member"
            parameterType="member">
        select * from member where id=#{id} <!-- and pass=#{pass} -->
    </select>
\

	//eun
	<!-- 비밀번호 변경 -->
	<select id="pwCheck" resultType="String">
		select pass from member where id = #{id}
	</select>
//eun
	<update id="pwUpdate">
		update member set pass = #{pass} where id = #{id}
	</update>

//eun
	<update id="updateMypage1">
		update member set business_no=#{business_no},
		business_name=#{business_name}, ceo=#{ceo}, contact=#{contact},
		email=#{email}, business_address= #{business_address} where id=#{id}
	</update>
//eun
	<update id="updateMypagePass">
		update member set pass=#{pass} where id=#{id}
	</update>




</mapper>